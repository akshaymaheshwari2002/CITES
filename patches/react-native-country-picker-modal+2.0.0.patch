diff --git a/node_modules/react-native-country-picker-modal/lib/CloseButton.js b/node_modules/react-native-country-picker-modal/lib/CloseButton.js
index 4fb16f6..6b45392 100644
--- a/node_modules/react-native-country-picker-modal/lib/CloseButton.js
+++ b/node_modules/react-native-country-picker-modal/lib/CloseButton.js
@@ -26,11 +26,11 @@ const CloseButtonAndroid = (props) => {
                 ? TouchableNativeFeedback.SelectableBackground()
                 : TouchableNativeFeedback.SelectableBackgroundBorderless(), onPress: props.onPress },
             React.createElement(View, null,
-                React.createElement(Image, { source: closeImage, style: [
-                        styles.imageStyle,
-                        props.imageStyle,
-                        { tintColor: onBackgroundTextColor }
-                    ] })))));
+                props.closeButton || React.createElement(Image, { source: closeImage, style: [
+                    styles.imageStyle,
+                    props.imageStyle,
+                    { tintColor: onBackgroundTextColor }
+                ] })))));
 };
 const CloseButtonIOS = (props) => {
     let closeImage = require('./assets/images/close.ios.png');
@@ -40,11 +40,12 @@ const CloseButtonIOS = (props) => {
     const { onBackgroundTextColor } = useTheme();
     return (React.createElement(View, { style: [styles.container, props.style] },
         React.createElement(TouchableOpacity, { onPress: props.onPress },
-            React.createElement(Image, { source: closeImage, style: [
+            React.createElement(View, null,
+                props.closeButton || React.createElement(Image, { source: closeImage, style: [
                     styles.imageStyle,
                     props.imageStyle,
                     { tintColor: onBackgroundTextColor }
-                ] }))));
+                ] })))));
 };
 const propTypes = {
     onPress: PropTypes.func,
diff --git a/node_modules/react-native-country-picker-modal/lib/CountryList.js b/node_modules/react-native-country-picker-modal/lib/CountryList.js
index 8816018..f50d2d0 100644
--- a/node_modules/react-native-country-picker-modal/lib/CountryList.js
+++ b/node_modules/react-native-country-picker-modal/lib/CountryList.js
@@ -33,7 +33,8 @@ const styles = StyleSheet.create({
         paddingHorizontal: 5,
     },
     itemCountryName: {
-        width: '90%',
+        flex: 1,
+        marginLeft: 8,
     },
     list: {
         flex: 1,
diff --git a/node_modules/react-native-country-picker-modal/lib/CountryModal.js b/node_modules/react-native-country-picker-modal/lib/CountryModal.js
index 1678e95..bb7987a 100644
--- a/node_modules/react-native-country-picker-modal/lib/CountryModal.js
+++ b/node_modules/react-native-country-picker-modal/lib/CountryModal.js
@@ -1,18 +1,27 @@
 import * as React from 'react';
-import { SafeAreaView, StyleSheet, Platform } from 'react-native';
+import { SafeAreaView, StyleSheet, Platform, View } from 'react-native';
 import { AnimatedModal } from './AnimatedModal';
 import { Modal } from './Modal';
 import { useTheme } from './CountryTheme';
 import { CountryModalContext } from './CountryModalProvider';
 const styles = StyleSheet.create({
     container: {
+        alignSelf: 'center',
+        height: '90%',
+        width: '90%',
+        borderRadius: 8,
+        paddingBottom: 16,
+    },
+    wrapper: {
         flex: 1,
+        justifyContent: 'center',
+        backgroundColor: 'rgba(0,0,0,0.6)',
     },
 });
 export const CountryModal = ({ children, withModal, disableNativeModal, ...props }) => {
     const { backgroundColor } = useTheme();
     const { teleport } = React.useContext(CountryModalContext);
-    const content = (React.createElement(SafeAreaView, { style: [styles.container, { backgroundColor }] }, children));
+    const content = (React.createElement(View, { style: [styles.container, { backgroundColor }] }, children));
     React.useEffect(() => {
         if (disableNativeModal) {
             teleport(React.createElement(AnimatedModal, Object.assign({}, props), content));
@@ -25,7 +34,7 @@ export const CountryModal = ({ children, withModal, disableNativeModal, ...props
         if (disableNativeModal) {
             return null;
         }
-        return React.createElement(Modal, Object.assign({}, props), content);
+        return React.createElement(Modal, Object.assign({}, props), React.createElement(SafeAreaView, { style: styles.wrapper }, content));
     }
     return content;
 };
diff --git a/node_modules/react-native-country-picker-modal/lib/CountryPicker.js b/node_modules/react-native-country-picker-modal/lib/CountryPicker.js
index c4ba18e..02b5a4f 100644
--- a/node_modules/react-native-country-picker-modal/lib/CountryPicker.js
+++ b/node_modules/react-native-country-picker-modal/lib/CountryPicker.js
@@ -9,7 +9,7 @@ import { CountryList } from './CountryList';
 const renderFlagButton = (props) => props.renderFlagButton ? (props.renderFlagButton(props)) : (React.createElement(FlagButton, Object.assign({}, props)));
 const renderFilter = (props) => props.renderCountryFilter ? (props.renderCountryFilter(props)) : (React.createElement(CountryFilter, Object.assign({}, props)));
 export const CountryPicker = (props) => {
-    const { countryCode, region, subregion, countryCodes, renderFlagButton: renderButton, renderCountryFilter, filterProps, modalProps, flatListProps, onSelect, withEmoji, withFilter, withCloseButton, withCountryNameButton, withCallingCodeButton, withCurrencyButton, containerButtonStyle, withAlphaFilter, withCallingCode, withCurrency, withFlag, withModal, disableNativeModal, withFlagButton, onClose: handleClose, onOpen: handleOpen, closeButtonImage, closeButtonStyle, closeButtonImageStyle, excludeCountries, placeholder, preferredCountries } = props;
+    const { countryCode, region, subregion, countryCodes, renderFlagButton: renderButton, renderCountryFilter, filterProps, modalProps, flatListProps, onSelect, withEmoji, withFilter, withCloseButton, withCountryNameButton, withCallingCodeButton, withCurrencyButton, containerButtonStyle, withAlphaFilter, withCallingCode, withCurrency, withFlag, withModal, disableNativeModal, withFlagButton, onClose: handleClose, onOpen: handleOpen, closeButtonImage, closeButtonStyle, closeButtonImageStyle, excludeCountries, placeholder, preferredCountries, closeButton } = props;
     const [state, setState] = useState({
         visible: props.visible || false,
         countries: [],
@@ -59,13 +59,14 @@ export const CountryPicker = (props) => {
         getCountriesAsync(withEmoji ? FlagType.EMOJI : FlagType.FLAT, translation, region, subregion, countryCodes, excludeCountries, preferredCountries, withAlphaFilter)
             .then(setCountries)
             .catch(console.warn);
-    }, [translation, withEmoji]);
+    }, [translation, withEmoji, countryCodes]);
     return (React.createElement(React.Fragment, null,
         withModal && renderFlagButton(flagProp),
         React.createElement(CountryModal, Object.assign({}, { visible, withModal, disableNativeModal, ...modalProps }, { onRequestClose: onClose, onDismiss: onClose }),
             React.createElement(HeaderModal, Object.assign({}, {
                 withFilter,
                 onClose,
+                closeButton,
                 closeButtonImage,
                 closeButtonImageStyle,
                 closeButtonStyle,
diff --git a/node_modules/react-native-country-picker-modal/lib/Flag.js b/node_modules/react-native-country-picker-modal/lib/Flag.js
index b974950..6a92287 100644
--- a/node_modules/react-native-country-picker-modal/lib/Flag.js
+++ b/node_modules/react-native-country-picker-modal/lib/Flag.js
@@ -7,8 +7,6 @@ const styles = StyleSheet.create({
     container: {
         justifyContent: 'center',
         alignItems: 'center',
-        width: 30,
-        marginRight: 10,
     },
     emojiFlag: {
         alignItems: 'center',
diff --git a/node_modules/react-native-country-picker-modal/lib/HeaderModal.js b/node_modules/react-native-country-picker-modal/lib/HeaderModal.js
index d08566a..762a3ee 100644
--- a/node_modules/react-native-country-picker-modal/lib/HeaderModal.js
+++ b/node_modules/react-native-country-picker-modal/lib/HeaderModal.js
@@ -8,9 +8,9 @@ const styles = StyleSheet.create({
     }
 });
 export const HeaderModal = (props) => {
-    const { withFilter, withCloseButton, closeButtonImage, closeButtonStyle, closeButtonImageStyle, onClose, renderFilter } = props;
+    const { withFilter, withCloseButton, closeButtonImage, closeButtonStyle, closeButtonImageStyle, onClose, renderFilter, closeButton } = props;
     return (React.createElement(View, { style: styles.container },
-        withCloseButton && React.createElement(CloseButton, { image: closeButtonImage, style: closeButtonStyle, imageStyle: closeButtonImageStyle, onPress: onClose }),
+        withCloseButton && React.createElement(CloseButton, {closeButton, image: closeButtonImage, style: closeButtonStyle, imageStyle: closeButtonImageStyle, onPress: onClose }),
         withFilter && renderFilter(props)));
 };
 HeaderModal.defaultProps = {
